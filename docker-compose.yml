# Services
services:
  mysql:
    image: mysql:8.0
    container_name: ecommerce_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ecommerce_phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - "8080:80"

  redis:
    image: redis:7.4-alpine
    container_name: ecommerce_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]

  backend:
    build: ./backend
    container_name: ecommerce_backend
    restart: always
    depends_on:
      - mysql
      - redis
    env_file:
      - .env
    ports:
      - "5005:5005"
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend-store:
    build: ./frontend-store
    container_name: ecommerce_frontend_store
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-store:/app
      - /app/node_modules
    stdin_open: true
    tty: true

  frontend-admin:
    build: ./frontend-admin
    container_name: ecommerce_frontend_admin
    restart: always
    ports:
      - "3001:3000"
    volumes:
      - ./frontend-admin:/app
      - /app/node_modules
    stdin_open: true
    tty: true

volumes:
  mysql_data:
  redis_data:
